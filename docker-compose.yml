services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    networks:
      - default
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--web.enable-lifecycle"
      - "--web.enable-admin-api"
    ports:
      - "9090:9090"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      - PROMETHEUS_WEB_LISTEN_ADDRESS=0.0.0.0:9090

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    networks:
      - default
    depends_on:
      - prometheus
    ports:
      - "3333:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=password
      - GF_USERS_ALLOW_SIGN_UP=false
    extra_hosts:
      - "host.docker.internal:host-gateway"

  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    command:
      - "--path.rootfs=/host"
    # network_mode: host
    networks:
      - default
    pid: host
    volumes:
      - "/:/host:ro,rslave"
    ports:
      - "9100:9100"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      - NODE_EXPORTER_WEB_LISTEN_ADDRESS=0.0.0.0:9100
      - NODE_EXPORTER_TEXTFILE_DIR=/var/lib/node_exporter/textfile_collector

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "8998:8998"
    environment:
      - PORT=8998
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET}
      - ROOT_EMAIL=${ROOT_EMAIL}
      - ROOT_PASSWORD=${ROOT_PASSWORD}
      - GCP_PROJECT_ID=${GCP_PROJECT_ID}
    depends_on:
      - email-service
    networks:
      - app-network

  email-service:
    build:
      context: ./email-service
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - ADMIN_SECRET=${ADMIN_SECRET}
      - APP_PASSWORD=${APP_PASSWORD}
    networks:
      - app-network

networks:
  default:
    driver: bridge
  app-network:
    driver: bridge

volumes:
  grafana-storage:
